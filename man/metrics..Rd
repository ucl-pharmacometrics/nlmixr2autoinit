% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evaluation.R
\name{metrics.}
\alias{metrics.}
\title{Calculate metrics for model predictive performance evaluation}
\usage{
metrics.(pred.x, obs.y)
}
\arguments{
\item{pred.x}{A numeric vector representing the predicted values or simulations.}

\item{obs.y}{A numeric vector representing the observed values.}
}
\value{
A numeric vector with the computed values of the following metrics:
\enumerate{
\item APE (Absolute Predicted Error)
\item MAE (Mean Absolute Error)
\item MAPE (Mean Absolute Percentage Error)
\item RMSE (Root Mean Squared Error)
\item rRMSEtype1 (Relative RMSE, type 1)
\item rRMSEtype2 ( Relative RMSE, type 2)
}
}
\description{
Calculates several error metrics, including absolute percentage error (APE),
mean Aabsolute error (MAE), mean absolute percentage error (MAPE), root mean squared error (RMSE),
and traditional relative root mean squared error (rRMSEtra) and Symmetric relative root mean squared error (rRMSEsym).
}
\details{
This function will stop with an error message if the length of \code{pred.x} and \code{obs.y} are not the same.
It computes the following metrics:
It computes the following metrics:
\itemize{
\item \strong{APE}: Sum of absolute differences between predicted and observed values.
\item \strong{MAE}: Mean of absolute differences between predicted and observed values.
\item \strong{MAPE}: Mean of absolute percentage differences between predicted and observed values.
\item \strong{RMSE}: Square root of the mean of squared differences between predicted and observed values.
\item \strong{rRMSEtype1}: relative RMSE, calculated as RMSE divided by the mean of observed values.
\item \strong{rRMSEtype2}: relative RMSE, calculated by dividing the squared error by the square of the average of each predictedâ€“observed pair.
}
}
\examples{
\dontrun{
set.seed(123)
obs.y  <- rnorm(100, mean = 100, sd = 10)
pred.x <- obs.y + rnorm(100, mean = 0, sd = 5)

## Calculate error metrics
metrics.(pred.x = pred.x, obs.y = obs.y)
}

}
